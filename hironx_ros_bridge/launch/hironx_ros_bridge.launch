<!-- for real robot -->
<launch>

  <rosparam command="load"
            file="$(find hironx_ros_bridge)/models/HIRONX_controller_config.yaml" />

  <arg name="nameserver" default="hiro014" /> <!-- for real robot -->
  <arg name="MODEL_FILE" default="$(find hironx_ros_bridge)/models/kawada-hironx.dae" />
  <arg name="COLLADA_FILE" default="$(find hironx_ros_bridge)/models/kawada-hironx.dae" />
  <arg name="SIMULATOR_NAME" default="RobotHardware0" />
  <arg name="corbaport" default="15005" />
  <arg name="CONF_FILE_COLLISIONDETECT" default="$(find hironx_ros_bridge)/conf/kawada-hironx.conf" /> <!-- Default is simulation -->
  <arg name="open_rqt_gui" default="true" />
  <arg name="USE_COLLISIONCHECK" default="false" /> <!-- For running collsion detection inside the robot (QNX) -->
  <arg name="USE_ROBOTHARDWARE" default="false" />
  <arg name="USE_IMPEDANCECONTROLLER" default="false"/>
  <arg name="USE_SERVOCONTROLLER" default="false" />
  <arg name="USE_ROBOT_POSE_EKF" default="false" />

  <!-- For rqt dashboard that needs to connect RTM nameserver -->
  <param name="rtmnameserver_host" type="str" value="$(arg nameserver)" />
  <param name="rtmnameserver_port" type="int" value="$(arg corbaport)" />
  <param name="rtmnameserver_robotname" type="str" value="$(arg SIMULATOR_NAME)" />

  <include file="$(find hrpsys_ros_bridge)/launch/hrpsys_ros_bridge.launch">
    <arg name="SIMULATOR_NAME" value="$(arg SIMULATOR_NAME)" />
    <arg name="nameserver" value="$(arg nameserver)" />
    <arg name="MODEL_FILE" value="$(arg MODEL_FILE)" />
    <arg name="COLLADA_FILE" value="$(arg COLLADA_FILE)" />
    <arg name="USE_ROBOT_POSE_EKF" value="$(arg USE_ROBOT_POSE_EKF)" />

    <arg name="USE_WALKING" value="false" />
    <arg name="BASE_LINK" value="WAIST"/>
    <!-- In hrpsys_ros_bridge.launch, Collision check might be turned on -->
    <arg name="USE_COLLISIONCHECK" value="$(arg USE_COLLISIONCHECK)" />
    <arg name="USE_ROBOTHARDWARE" value="$(arg USE_ROBOTHARDWARE)" />
    <arg name="USE_IMPEDANCECONTROLLER" value="false" />
    <arg name="USE_SOFTERRORLIMIT" value="false" />
    <arg name="USE_SERVOCONTROLLER" value="$(arg USE_SERVOCONTROLLER)" />

    <arg name="corbaport" default="$(arg corbaport)" />
  </include>

  <!-- Launch ros bridge for old impedance controller in HiroNX -->
  <include file="$(find hironx_ros_bridge)/launch/impedance_controller.launch" if="$(arg USE_IMPEDANCECONTROLLER)">
    <arg name="corbaport" default="$(arg corbaport)" />
    <arg name="nameserver" value="$(arg nameserver)" />
    <arg name="SIMULATOR_NAME" value="$(arg SIMULATOR_NAME)" />
  </include>

<!--
  <node name="hironx_rviz" pkg="rviz" type="rviz" respawn="true"
  args="-sync -d $(find hrpsys_ros_bridge_tutorials)/launch/hironx.vcg"
        />
-->

  <!-- Collision detection here runs external to the robot (on Ubuntu) and 
       visualizes the distance between each links. -->
  <include file="$(find hrpsys_ros_bridge)/launch/collision_detector.launch" unless="$(arg USE_COLLISIONCHECK)">
    <arg name="MODEL_FILE" value="$(arg MODEL_FILE)" />
    <arg name="CONF_FILE" value="$(arg CONF_FILE_COLLISIONDETECT)" />
    <arg name="corbaport" default="$(arg corbaport)" />
    <arg name="nameserver" value="$(arg nameserver)" />
    <arg name="SIMULATOR_NAME" value="$(arg SIMULATOR_NAME)" />
    <arg name="COLLISIONDETECTOR_INSTANCE_NAME" default="CollisionDetector0" />
  </include>

  <group if="$(arg open_rqt_gui)"> 
    <!-- Load rqt GUI tool with a pre-setup GUI perspective file  -->
    <node pkg="rqt_gui" type="rqt_gui" name="rqt_hironxo" respawn="false" output="screen"
          args="--perspective-file $(find hironx_ros_bridge)/resource/hironx_rqt_dashboard.perspective"/>
  </group>
</launch>
